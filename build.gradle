import app.elementaryeditor.buildsrc.DependencyUpdates
import app.elementaryeditor.buildsrc.ReleaseType

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.buildConfig = [
            'compileSdk': 31,
            'minSdk'    : 21,
            'targetSdk' : 30,
    ]
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath libs.android.pluginGradle
        classpath libs.kotlin.pluginGradle
        classpath libs.androidx.navigation.safeArgs.pluginGradle
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    alias(libs.plugins.gradleDependencyUpdate)
}

subprojects {
    configurations.configureEach {
        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
            kotlinOptions {
                // Enable experimental coroutines APIs, including Flow
                freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
                freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
                freeCompilerArgs += "-Xopt-in=kotlin.time.ExperimentalTime"

                // Set JVM target to 11
                jvmTarget = JavaVersion.VERSION_11
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * Update dependencyUpdates task to reject versions which are more 'unstable' than our
 * current version.
 */
tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        def current = DependencyUpdates.versionToRelease(it.currentVersion)
        // If we're using a SNAPSHOT, ignore since we must be doing so for a reason.
        if (current == ReleaseType.SNAPSHOT) return true

        // Otherwise we reject if the candidate is more 'unstable' than our version
        def candidate = DependencyUpdates.versionToRelease(it.candidate.version)
        return candidate.isLessStableThan(current)
    }
}